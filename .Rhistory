mainPanel(
textOutput('selected_var'),
tableOutput('variable_summary')
)
)
)
server <- function(input, output) {
output$selected_var <- renderText({
paste('Selected Variable(s): ', input$variable)
})
output$variable_summary <- renderTable({
selected_var <- input$variable
summary <- summary(data[[selected_var]])
data.frame(Future = names(summary), Value= as.character(summary))
})
}
shinyApp(ui, server)
ui <- fluidPage(
theme = shinytheme("cerulean"),
titlePanel('Variable names'),
sidebarLayout(
sidebarPanel(
selectInput('variable', 'Select variable', choices = variables)
),
mainPanel(
h3('Dataset Description'),
p("The dataset, sourced from a mobile healthcare service operated by non-governmental organizations managing elderly care centers, contains various demographic, health, and quality of life information for elderly individuals.
It includes 2299 observations and 12 variables, covering age, gender, height, weight, education level, financial status, and nutrition assessment scores."),
br(),
textOutput('selected_var'),
tableOutput('variable_summary')
)
)
)
library(shiny)
library(shinythemes)
install.packages('shiny')
library(shiny)
library(shiny)
library(shinythemes)
library(dplyr)
data = read.csv('dataset ICT583 2024S1.csv')
variables = names(data[,-1])
ui <- fluidPage(
theme = shinytheme("cerulean"),
titlePanel('Variable names'),
sidebarLayout(
sidebarPanel(
selectInput('variable', 'Select variable', choices = variables)
),
mainPanel(
h3('Dataset Description'),
p("The dataset, sourced from a mobile healthcare service operated by non-governmental organizations managing elderly care centers, contains various demographic, health, and quality of life information for elderly individuals.
It includes 2299 observations and 12 variables, covering age, gender, height, weight, education level, financial status, and nutrition assessment scores."),
br(),
textOutput('selected_var'),
tableOutput('variable_summary')
)
)
)
server <- function(input, output) {
output$selected_var <- renderText({
paste('Selected Variable(s): ', input$variable)
})
output$variable_summary <- renderTable({
selected_var <- input$variable
summary <- summary(data[[selected_var]])
data.frame(Future = names(summary), Value= as.character(summary))
})
}
shinyApp(ui, server)
paste('Selected Variable: ', input$variable)
shinyApp(ui, server)
data = read.csv('dataset ICT583 2024S1.csv')
variables = names(data[,-1])
continuous_vars <- c("Age", "Body_Height", "Body_Weight", "GDS", "MNAa_total", "MNAb_total")
categorical_vars <- c("MMSE_class_binary", "Gender", "Independent_or_depend_on_family", "Marital_status_ID", "Education_ID", "Financial_status")
ui <- fluidPage(
theme = shinytheme("cerulean"),
titlePanel('Variable names'),
sidebarLayout(
sidebarPanel(
selectInput('variable_type', 'Select variable', choices = c('continuous', 'categorical')),
uiOutput('variable_select')
),
mainPanel(
h3('Dataset Description'),
p("The dataset, sourced from a mobile healthcare service operated by non-governmental organizations managing elderly care centers, contains various demographic, health, and quality of life information for elderly individuals.
It includes 2299 observations and 12 variables, covering age, gender, height, weight, education level, financial status, and nutrition assessment scores."),
br(),
textOutput('selected_var'),
tableOutput('variable_summary')
)
)
)
server <- function(input, output, session) {
output$variable_select <- renderUI({
if (input$variable_type == 'categorical') {
selectInput('variable', 'Selected Variable: ', choices = categorical_vars)
} else {
selectInput('variable', 'Selected Variable: ', choices = continuous_vars)
}
})
output$selected_var <- renderText({
paste('Selected variable: ', input$variable)
})
output$variable_summary <- renderTable({
selected_var <- input$variable
if (!is.null(selected_var)) {
summary <- summary(data[[selected_var]])
data.frame(Future = names(summary), Value= as.character(summary))
}
})
}
shinyApp(ui, server)
ui <- fluidPage(
theme = shinytheme("cerulean"),
titlePanel('Variable names'),
sidebarLayout(
sidebarPanel(
selectInput('variable_type', 'Select Variable Type', choices = c('Continuous', 'Categorical')),
uiOutput('variable_select')
),
mainPanel(
h3('Dataset Description'),
p("The dataset, sourced from a mobile healthcare service operated by non-governmental organizations managing elderly care centers, contains various demographic, health, and quality of life information for elderly individuals.
It includes 2299 observations and 12 variables, covering age, gender, height, weight, education level, financial status, and nutrition assessment scores."),
br(),
textOutput('selected_var'),
tableOutput('variable_summary')
)
)
)
server <- function(input, output, session) {
output$variable_select <- renderUI({
if (input$variable_type == 'Categorical') {
selectInput('variable', 'Selected Variable: ', choices = categorical_vars)
} else {
selectInput('variable', 'Selected Variable: ', choices = continuous_vars)
}
})
output$selected_var <- renderText({
paste('Selected variable: ', input$variable)
})
output$variable_summary <- renderTable({
selected_var <- input$variable
if (!is.null(selected_var)) {
summary <- summary(data[[selected_var]])
data.frame(Future = names(summary), Value= as.character(summary))
}
})
}
shinyApp(ui, server)
ui <- fluidPage(
theme = shinytheme("cerulean"),
titlePanel('Variable names'),
sidebarLayout(
sidebarPanel(
selectInput('variable_type', 'Select Variable Type', choices = c('Continuous', 'Categorical')),
uiOutput('variable_select')
),
mainPanel(
h3('Dataset Description'),
p("The dataset, sourced from a mobile healthcare service operated by non-governmental organizations managing elderly care centers, contains various demographic, health, and quality of life information for elderly individuals.
It includes 2299 observations and 12 variables, covering age, gender, height, weight, education level, financial status, and nutrition assessment scores."),
br(),
textOutput('selected_var'),
tableOutput('variable_summary')
)
)
)
server <- function(input, output, session) {
selectInput('variable', 'Selected Variable: ', choices = categorical_vars)
server <- function(input, output, session) {
if (input$variable_type == 'Categorical') {
selectInput('variable', 'Selected Variable: ', choices = categorical_vars)
} else {
selectInput('variable', 'Selected Variable: ', choices = continuous_vars)
}
output$variable_select <- renderUI({
if (input$variable_type == 'Categorical') {
selectInput('variable', 'Selected Variable: ', choices = categorical_vars)
} else {
selectInput('variable', 'Selected Variable: ', choices = continuous_vars)
}
})
output$selected_var <- renderText({
paste('Selecte variable: ', input$variable)
})
output$variable_summary <- renderTable({
selected_var <- input$variable
if (!is.null(selected_var)) {
if (input$variable_type == 'Categorical') {
summary <- summary(data[[selected_var]])
data.frame(Future = names(summary), Value= as.character(summary))
} else {
summary <- table(data[[selected_var]])
data.frame(Future = names(summary), Value= as.character(summary))
}
})
ui <- fluidPage(
theme = shinytheme("cerulean"),
titlePanel('Variable names'),
sidebarLayout(
sidebarPanel(
selectInput('variable_type', 'Select Variable Type', choices = c('Continuous', 'Categorical')),
uiOutput('variable_select')
),
mainPanel(
h3('Dataset Description'),
p("The dataset, sourced from a mobile healthcare service operated by non-governmental organizations managing elderly care centers, contains various demographic, health, and quality of life information for elderly individuals.
It includes 2299 observations and 12 variables, covering age, gender, height, weight, education level, financial status, and nutrition assessment scores."),
br(),
textOutput('selected_var'),
tableOutput('variable_summary')
)
)
)
server <- function(input, output, session) {
server <- function(input, output, session) {
if (input$variable_type == 'Categorical') {
selectInput('variable', 'Selected Variable: ', choices = categorical_vars)
} else {
selectInput('variable', 'Selected Variable: ', choices = continuous_vars)
}
output$variable_select <- renderUI({
if (input$variable_type == 'Categorical') {
selectInput('variable', 'Selected Variable: ', choices = categorical_vars)
} else {
selectInput('variable', 'Selected Variable: ', choices = continuous_vars)
}
})
output$selected_var <- renderText({
paste('Selecte variable: ', input$variable)
})
output$variable_summary <- renderTable({
selected_var <- input$variable
if (!is.null(selected_var)) {
if (input$variable_type == 'Categorical') {
summary <- summary(data[[categorical_vars]])
data.frame(Future = names(summary), Value= as.character(summary))
} else {
summary <- table(data[[continuous_vars]])
data.frame(Future = names(summary), Value= as.character(summary))
}
})
output$variable_summary <- renderTable({
selected_var <- input$variable
if (!is.null(selected_var)) {
if (input$variable_type == 'Categorical') {
summary <- summary(data[[categorical_vars]])
data.frame(Future = names(summary), Value= as.character(summary))
} else {
summary <- table(data[[continuous_vars]])
data.frame(Future = names(summary), Value= as.character(summary))
}
})
selected_var <- input$variable
ui <- fluidPage(
theme = shinytheme("cerulean"),
titlePanel('Variable names'),
sidebarLayout(
sidebarPanel(
selectInput('variable_type', 'Select Variable Type', choices = c('Continuous', 'Categorical')),
uiOutput('variable_select')
),
mainPanel(
h3('Dataset Description'),
p("The dataset, sourced from a mobile healthcare service operated by non-governmental organizations managing elderly care centers, contains various demographic, health, and quality of life information for elderly individuals.
It includes 2299 observations and 12 variables, covering age, gender, height, weight, education level, financial status, and nutrition assessment scores."),
br(),
textOutput('selected_var'),
tableOutput('variable_summary')
)
)
)
server <- function(input, output, session) {
if (input$variable_type == 'Categorical') {
selectInput('variable', 'Selected Variable: ', choices = categorical_vars)
} else {
selectInput('variable', 'Selected Variable: ', choices = continuous_vars)
}
output$variable_select <- renderUI({
if (input$variable_type == 'Categorical') {
selectInput('variable', 'Selected Variable: ', choices = categorical_vars)
} else {
selectInput('variable', 'Selected Variable: ', choices = continuous_vars)
}
})
output$selected_var <- renderText({
paste('Selecte variable: ', input$variable)
})
output$variable_summary <- renderTable({
selected_var <- input$variable
if (!is.null(selected_var)) {
if (input$variable_type == 'Categorical') {
summary <- summary(data[[categorical_vars]])
data.frame(Future = names(summary), Value= as.character(summary))
} else {
summary <- table(data[[continuous_vars]])
data.frame(Future = names(summary), Value= as.character(summary))
}
}
})
shinyApp(ui, server)
library(shiny)
library(shinythemes)
library(dplyr)
data = read.csv('dataset ICT583 2024S1.csv')
variables = names(data[,-1])
data
variables = names(data[,-1])
variables
library(shiny)
library(shinythemes)
library(dplyr)
data = read.csv('dataset ICT583 2024S1.csv')
variables = names(data[,-1])
variables
data = read.csv('dataset ICT583 2024S1.csv')
####Summary Statistic####
library(tidyverse)
str(data)
shinyApp(ui, server)
library(shiny)
library(shinythemes)
library(dplyr)
data = read.csv('dataset ICT583 2024S1.csv')
variables = names(data[,-1])
continuous_vars <- c("Age", "Body_Height", "Body_Weight", "GDS", "MNAa_total", "MNAb_total")
categorical_vars <- c("MMSE_class_binary", "Gender", "Independent_or_depend_on_family", "Marital_status_ID", "Education_ID", "Financial_status")
category_labels <- list(
Gender = c("0" = "0 - Female", "1" = "1 - Male"),
Education_ID = c("1" = "1 - No Education", "2" = "2 - Primary  School", "3" = "3 - Secondary School", "4" = "4 - Tertiary"),
Financial_status = c("1" = "1 - Independent or depend on family", "2" = "2 - Comprehensive Social Security Assistance", "3" = "3 - Disability Allowance", "4" = "4 - Old Age Allowance", "5" = "5 - Independent or depend on family with Old Age Allowance", "6" = "6 - Independent or depend on family with Disability Allowance", "7" = "7 - Independent or depend on family with CSSA"),
Independent_or_depend_on_family = c("0" = "0 - Independent", "1" = "1 - Dependent"),
Marital_status_ID = c("1" = "1 - Single", "2" = "2 - Married", "3" = "3 - Widowed", "4" = "4 - Separate", "5" = "5 - Divorced", "6" = "6 - Married but not live with spouse"),
MMSE_class_binary = c("0" = "0 - Negative – Indicate No Dementia Risk ", "1" = "1 - Positive – Indicate Possible Dementia Risk")
)
ui <- fluidPage(
theme = shinytheme("cerulean"),
titlePanel('Variable names'),
sidebarLayout(
sidebarPanel(
h3('Dataset Description'),
p("The dataset, sourced from a mobile healthcare service operated by non-governmental organizations managing elderly care centers in Hong Kong between 2008-2018, contains various demographic, health, and quality of life information for elderly individuals.
It includes 2299 observations and 12 variables, covering age, gender, height, weight, education level, financial status, and nutrition assessment scores."),
hr(),
selectInput('variable_type', 'Select Variable Type', choices = c('Continuous', 'Categorical')),
uiOutput('variable_select'),
),
mainPanel(
textOutput('selected_var'),
tableOutput('variable_summary')
)
)
)
server <- function(input, output, session) {
output$variable_select <- renderUI({
if (input$variable_type == 'Categorical') {
selectInput('variable', 'Selected Variable: ', choices = categorical_vars)
} else {
selectInput('variable', 'Selected Variable: ', choices = continuous_vars)
}
})
output$selected_var <- renderText({
paste('Selecte variable: ', input$variable)
})
output$variable_summary <- renderTable({
selected_var <- input$variable
if (!is.null(selected_var)) {
if (input$variable_type == 'Categorical') {
summary_stats <- as.data.frame(table(data[[selected_var]], useNA = "ifany"))
colnames(summary_stats) <- c("Category", "Frequency")
if (selected_var %in% names(category_labels)) {
summary_stats$Category <- category_labels[[selected_var]][as.character(summary_stats$Category)]
}
} else {
summary_stats  <- summary(data[[selected_var]])
summary_stats  <- data.frame(Feature  = names(summary_stats ), Value= as.character(summary_stats ))
}
summary_stats
}
})
}
shinyApp(ui, server)
ui <- fluidPage(
theme = shinytheme("cerulean"),
titlePanel('Information About Dataset'),
sidebarLayout(
sidebarPanel(
h3('Dataset Description'),
p("The dataset, sourced from a mobile healthcare service operated by non-governmental organizations managing elderly care centers in Hong Kong between 2008-2018, contains various demographic, health, and quality of life information for elderly individuals.
It includes 2299 observations and 12 variables, covering age, gender, height, weight, education level, financial status, and nutrition assessment scores."),
hr(),
selectInput('variable_type', 'Select Variable Type', choices = c('Continuous', 'Categorical')),
uiOutput('variable_select'),
),
mainPanel(
textOutput('selected_var'),
tableOutput('variable_summary')
)
)
)
server <- function(input, output, session) {
output$variable_select <- renderUI({
if (input$variable_type == 'Categorical') {
selectInput('variable', h5('Selected Variable: ', choices = categorical_vars))
} else {
selectInput('variable', h5('Selected Variable: ', choices = continuous_vars))
}
})
output$selected_var <- renderText({
paste('Selecte variable: ', input$variable)
})
output$variable_summary <- renderTable({
selected_var <- input$variable
if (!is.null(selected_var)) {
if (input$variable_type == 'Categorical') {
summary_stats <- as.data.frame(table(data[[selected_var]], useNA = "ifany"))
colnames(summary_stats) <- c("Category", "Frequency")
if (selected_var %in% names(category_labels)) {
summary_stats$Category <- category_labels[[selected_var]][as.character(summary_stats$Category)]
}
} else {
summary_stats  <- summary(data[[selected_var]])
summary_stats  <- data.frame(Feature  = names(summary_stats ), Value= as.character(summary_stats ))
}
summary_stats
}
})
}
shinyApp(ui, server)
output$variable_select <- renderUI({
if (input$variable_type == 'Categorical') {
selectInput('variable', 'Selected Variable: ', choices = categorical_vars)
} else {
selectInput('variable', 'Selected Variable: ', choices = continuous_vars)
}
})
shinyApp(ui, server)
category_labels
library(shiny)
library(shinythemes)
library(dplyr)
data = read.csv('dataset ICT583 2024S1.csv')
variables = names(data[,-1])
continuous_vars <- c("Age", "Body_Height", "Body_Weight", "GDS", "MNAa_total", "MNAb_total")
categorical_vars <- c("MMSE_class_binary", "Gender", "Independent_or_depend_on_family", "Marital_status_ID", "Education_ID", "Financial_status")
category_labels <- list(
Gender = c("0" = "0 - Female", "1" = "1 - Male"),
Education_ID = c("1" = "1 - No Education", "2" = "2 - Primary  School", "3" = "3 - Secondary School", "4" = "4 - Tertiary"),
Financial_status = c("1" = "1 - Independent or depend on family", "2" = "2 - Comprehensive Social Security Assistance", "3" = "3 - Disability Allowance", "4" = "4 - Old Age Allowance", "5" = "5 - Independent or depend on family with Old Age Allowance", "6" = "6 - Independent or depend on family with Disability Allowance", "7" = "7 - Independent or depend on family with CSSA"),
Independent_or_depend_on_family = c("0" = "0 - Independent", "1" = "1 - Dependent"),
Marital_status_ID = c("1" = "1 - Single", "2" = "2 - Married", "3" = "3 - Widowed", "4" = "4 - Separate", "5" = "5 - Divorced", "6" = "6 - Married but not live with spouse"),
MMSE_class_binary = c("0" = "0 - Negative – Indicate No Dementia Risk ", "1" = "1 - Positive – Indicate Possible Dementia Risk")
)
source("modules/data_info_module.R")
source("modules/missing_values_module.R")
server <- function(input, output, session) {
callModule(dataInfoServer, "dataInfo", data = data, categorical_vars = categorical_vars, continuous_vars = continuous_vars, category_labels = category_labels)
callModule(missingValuesServer, "missingValues", data = data)
}
shinyApp(ui = ui, server = server)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('RANN')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
for (var in missing_cont_vars) {
imputation_details[[var]] <- "KNN Imputation"
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(DMwR2)
runApp()
runApp()
runApp()
install.packages('DMwR2')
install.packages("DMwR2")
runApp()
